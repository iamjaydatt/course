<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description" content="Purchase the Haunted HTML Course at Haunted WebDev Academy. Secure checkout with Razorpay for horror-themed web development lessons." />
  <meta name="keywords" content="HTML course, web development, horror coding, Razorpay, coding course" />
  <meta name="author" content="It Is Unique Official" />
  <meta property="og:title" content="Haunted WebDev Academy - HTML Course" />
  <meta property="og:description" content="Master HTML5 with our horror-themed course. Secure checkout with Razorpay." />
  <meta property="og:image" content="https://via.placeholder.com/1200x630?text=Haunted+HTML+Course&fm=webp" />
  <meta property="og:url" content="https://example.com/buy-html" />
  <meta name="twitter:card" content="summary_large_image" />
  <title>Haunted WebDev Academy - Buy HTML Course</title>
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Creepster&family=Inter:wght@400;600;700&display=swap" as="style">
  <link rel="preload" href="https://via.placeholder.com/600x400?text=HTML+Course&fm=webp" as="image">
  <link href="https://fonts.googleapis.com/css2?family=Creepster&family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link rel="icon" type="image/webp" href="https://via.placeholder.com/32?text=ðŸ‘»">
  <style>
    body {
      background: #0a0a0a;
      color: #e5e7eb;
      font-family: 'Inter', sans-serif;
      scroll-behavior: smooth;
      overflow-x: hidden;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 1.5rem;
    }
    .glow {
      text-shadow: 0 0 8px #dc2626;
    }
    .form-container {
      background: #1f2937;
      border: 2px solid #dc2626;
      border-radius: 12px;
      padding: 2rem;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
    }
    .error {
      color: #f87171;
      font-size: 0.875rem;
      margin-top: 0.25rem;
    }
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.9);
      z-index: 100;
      align-items: center;
      justify-content: center;
    }
    .modal-content {
      background: #1f2937;
      color: #e5e7eb;
      padding: 1.5rem;
      border-radius: 12px;
      max-width: 450px;
      width: 90%;
      border: 2px solid #dc2626;
      animation: fadeIn 0.3s ease;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: scale(0.95); }
      to { opacity: 1; transform: scale(1); }
    }
    .progress-bar {
      height: 4px;
      background: #dc2626;
      width: 33%;
      transition: width 0.3s ease;
    }
    .progress-step {
      display: flex;
      justify-content: space-between;
      margin-bottom: 1rem;
      font-size: 0.875rem;
      color: #9ca3af;
    }
    .progress-step .active {
      color: #dc2626;
      font-weight: 600;
    }
    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }
      .form-container {
        padding: 1.5rem;
      }
      h1 {
        font-size: 1.75rem;
      }
      .product-image {
        width: 100%;
        height: auto;
      }
    }
    @media (max-width: 640px) {
      button {
        padding: 0.75rem;
        font-size: 0.875rem;
      }
      .progress-step {
        font-size: 0.75rem;
      }
    }
  </style>
</head>
<body>
  <nav class="sticky top-0 z-50 bg-black bg-opacity-90 border-b-2 border-red-600 text-white py-3" role="navigation" aria-label="Main navigation">
    <div class="container flex justify-between items-center">
      <div class="flex items-center">
        <img src="https://via.placeholder.com/40?text=ðŸ‘»" alt="Haunted WebDev Logo" class="h-8 mr-2" width="40" height="40" loading="lazy">
        <span class="text-xl font-bold font-creepster text-red-600">Haunted WebDev</span>
      </div>
      <div class="space-x-3">
        <a href="/index.html#hero" class="hover:text-red-600 transition font-inter text-sm" aria-label="Home">Home</a>
        <a href="/index.html#courses" class="hover:text-red-600 transition font-inter text-sm" aria-label="Courses">Courses</a>
        <a href="/index.html#notes" class="hover:text-red-600 transition font-inter text-sm" aria-label="Notes">Notes</a>
        <a href="/index.html#cta" class="hover:text-red-600 transition font-inter text-sm" aria-label="Enroll">Enroll</a>
      </div>
    </div>
  </nav>

  <main class="container py-6" role="main">
    <h1 class="text-2xl md:text-3xl font-creepster text-red-600 text-center mb-6 glow">Purchase HTML Course</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div class="flex flex-col">
        <img src="https://campus.w3schools.com/cdn/shop/files/react_930c122c-8d12-4a0a-85ef-67ca7e78bccf.png?v=1734688338" alt="HTML Course Preview" class="product-image rounded-lg mb-4 w-full" width="600" height="400" loading="lazy">
        <h2 class="text-xl font-creepster text-red-600 mb-3 glow">HTML Course</h2>
        <p class="text-gray-300 font-inter mb-3">Master HTML5 with our horror-themed course. Build web structures that haunt the digital realm.</p>
        <p class="text-red-600 font-bold text-lg mb-3">Price: â‚¹4999</p>
        <ul class="text-gray-300 font-inter space-y-1 text-sm">
          <li><i class="fas fa-skull mr-2"></i>Lifetime Access</li>
          <li><i class="fas fa-ghost mr-2"></i>30+ Video Lessons</li>
          <li><i class="fas fa-spider mr-2"></i>Interactive Projects</li>
          <li><i class="fas fa-certificate mr-2"></i>Cursed Certificate</li>
        </ul>
      </div>
      <div class="form-container">
        <div class="progress-step">
          <span class="active">1. Details</span>
          <span>2. Payment</span>
          <span>3. Confirmation</span>
        </div>
        <div class="progress-bar" id="progressBar"></div>
        <form id="buyForm" novalidate>
          <div class="mb-3">
            <label for="fullName" class="block text-gray-300 font-inter text-sm mb-1">Full Name</label>
            <input type="text" id="fullName" placeholder="Your Full Name" class="w-full p-2 border border-gray-600 bg-gray-800 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-red-600 text-sm" required aria-required="true" aria-describedby="fullNameError">
            <p id="fullNameError" class="error hidden">Please enter your full name.</p>
          </div>
          <div class="mb-3">
            <label for="mobile" class="block text-gray-300 font-inter text-sm mb-1">Mobile Number</label>
            <input type="tel" id="mobile" placeholder="+91 1234567890" class="w-full p-2 border border-gray-600 bg-gray-800 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-red-600 text-sm" required aria-required="true" aria-describedby="mobileError">
            <p id="mobileError" class="error hidden">Please enter a valid mobile number.</p>
          </div>
          <div class="mb-3">
            <label for="email" class="block text-gray-300 font-inter text-sm mb-1">Email ID</label>
            <input type="email" id="email" placeholder="your.email@example.com" class="w-full p-2 border border-gray-600 bg-gray-800 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-red-600 text-sm" required aria-required="true" aria-describedby="emailError">
            <p id="emailError" class="error hidden">Please enter a valid email address.</p>
          </div>
          <div class="mb-3">
            <label for="address" class="block text-gray-300 font-inter text-sm mb-1">Address</label>
            <textarea id="address" placeholder="Your Full Address" class="w-full p-2 border border-gray-600 bg-gray-800 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-red-600 text-sm" required aria-required="true" aria-describedby="addressError"></textarea>
            <p id="addressError" class="error hidden">Please enter your address.</p>
          </div>
          <div class="mb-3">
            <label for="productId" class="block text-gray-300 font-inter text-sm mb-1">Product ID</label>
            <input type="text" id="productId" value="html_course_001" readonly class="w-full p-2 border border-gray-600 bg-gray-800 text-white rounded-lg text-sm" aria-describedby="productIdInfo">
            <p id="productIdInfo" class="text-gray-400 text-xs">Auto-generated Product ID</p>
          </div>
          <div class="mb-3">
            <label for="buyTime" class="block text-gray-300 font-inter text-sm mb-1">Purchase Time</label>
            <input type="text" id="buyTime" readonly class="w-full p-2 border border-gray-600 bg-gray-800 text-white rounded-lg text-sm" aria-describedby="buyTimeInfo">
            <p id="buyTimeInfo" class="text-gray-400 text-xs">Auto-generated Purchase Time</p>
          </div>
          <div class="mb-3">
            <label for="userIp" class="block text-gray-300 font-inter text-sm mb-1">User IP</label>
            <input type="text" id="userIp" readonly class="w-full p-2 border border-gray-600 bg-gray-800 text-white rounded-lg text-sm" aria-describedby="userIpInfo">
            <p id="userIpInfo" class="text-gray-400 text-xs">Auto-detected IP Address</p>
          </div>
          <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg w-full transition duration-300 glow text-sm" aria-label="Proceed to Payment">
            Proceed to Payment
            <span id="loadingSpinner" class="hidden inline-block ml-2"><i class="fas fa-spinner fa-spin"></i></span>
          </button>
        </form>
      </div>
    </div>
  </main>

  <div id="paymentModal" class="modal" role="dialog" aria-labelledby="paymentModalTitle" tabindex="-1">
    <div class="modal-content">
      <h2 id="paymentModalTitle" class="text-xl font-creepster text-red-600 mb-3 glow">Payment Status</h2>
      <p class="mb-4 font-inter text-sm" id="paymentMessage">Processing your payment...</p>
      <button onclick="closeModal()" class="text-red-600 hover:text-red-500 font-inter text-sm" aria-label="Close Modal">Close</button>
    </div>
  </div>

  <footer class="bg-black text-gray-300 py-6 text-center" role="contentinfo">
    <div class="container">
      <p class="text-sm">Â© 2025 It Is Unique Official. All rights cursed.</p>
      <div class="mt-2 space-x-3 text-sm">
        <a href="#" class="hover:text-red-600 transition" aria-label="Privacy Policy">Privacy Policy</a>
        <a href="#" class="hover:text-red-600 transition" aria-label="Terms of Service">Terms of Service</a>
        <a href="#" class="hover:text-red-600 transition" aria-label="Contact Us">Contact Us</a>
      </div>
    </div>
  </footer>

  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Product",
      "name": "HTML Course - Haunted WebDev Academy",
      "description": "Master HTML5 with our horror-themed course, including lifetime access and a cursed certificate.",
      "offers": {
        "@type": "Offer",
        "price": "4999",
        "priceCurrency": "INR",
        "url": "https://example.com/buy-html"
      }
    }
  </script>

  <script defer src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
    // Auto-populate buying time
    document.getElementById('buyForm').reset();
    document.getElementById('buyTime').value = new Date().toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' });

    // Fetch user IP
    fetch('https://api.ipify.org?format=json')
      .then(res => res.json())
      .then(data => { document.getElementById('userIp').value = data.ip; })
      .catch(() => { document.getElementById('userIp').value = 'Unknown'; });

    // Form validation
    function validateField(fieldId, errorId, validationFn, errorMessage) {
      const field = document.getElementById(fieldId);
      const error = document.getElementById(errorId);
      if (!validationFn(field.value)) {
        error.classList.remove('hidden');
        error.textContent = errorMessage;
        return false;
      }
      error.classList.add('hidden');
      return true;
    }

    // Modal controls
    const paymentModal = document.getElementById('paymentModal');
    function openModal(message) {
      document.getElementById('paymentMessage').textContent = message;
      paymentModal.style.display = 'flex';
      paymentModal.querySelector('.modal-content').focus();
    }
    function closeModal() {
      paymentModal.style.display = 'none';
      submitButton.disabled = false;
      spinner.classList.add('hidden');
      progressBar.style.width = '33%';
    }

    // Form submission
    const buyForm = document.getElementById('buyForm');
    const submitButton = buyForm.querySelector('button[type="submit"]');
    const spinner = document.getElementById('loadingSpinner');
    const progressBar = document.getElementById('progressBar');

    buyForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Validate form
      const validations = [
        { id: 'fullName', error: 'fullNameError', fn: v => v.trim().length > 0, msg: 'Please enter your full name.' },
        { id: 'mobile', error: 'mobileError', fn: v => /^\+\d{1,3}\s?\d{10}$/.test(v), msg: 'Please enter a valid mobile number (e.g., +91 1234567890).' },
        { id: 'email', error: 'emailError', fn: v => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v), msg: 'Please enter a valid email address.' },
        { id: 'address', error: 'addressError', fn: v => v.trim().length > 10, msg: 'Please enter a valid address (minimum 10 characters).' }
      ];

      if (!validations.every(v => validateField(v.id, v.error, v.fn, v.msg))) return;

      submitButton.disabled = true;
      spinner.classList.remove('hidden');
      progressBar.style.width = '66%';

      const formData = {
        fullName: document.getElementById('fullName').value,
        mobile: document.getElementById('mobile').value,
        email: document.getElementById('email').value,
        address: document.getElementById('address').value,
        productId: document.getElementById('productId').value,
        buyTime: document.getElementById('buyTime').value,
        userIp: document.getElementById('userIp').value
      };

      // Telegram notification (client-side, insecure for production)
      const telegramBotToken = '6784154796:AAG9E0I8iZcgd-g0ZYzHa9H3782WsYWs0vs'; // Replace with your bot token
      const telegramChatId = '-4881147781'; // Replace with your chat ID
      async function sendTelegramNotification(status, paymentId) {
        const message = encodeURIComponent(
          `*Haunted WebDev Payment*\n` +
          `Status: ${status.toUpperCase()}\n` +
          `Payment ID: ${paymentId || 'N/A'}\n` +
          `Product: ${formData.productId}\n` +
          `Name: ${formData.fullName}\n` +
          `Email: ${formData.email}\n` +
          `Mobile: ${formData.mobile}\n` +
          `Address: ${formData.address}\n` +
          `Time: ${formData.buyTime}\n` +
          `IP: ${formData.userIp}`
        );
        try {
          await fetch(`https://api.telegram.org/bot${telegramBotToken}/sendMessage?chat_id=${telegramChatId}&text=${message}&parse_mode=Markdown`);
        } catch (error) {
          console.error('Telegram error:', error);
        }
      }

      try {
        // Hardcoded order for client-side (replace with backend for production)
        const order = {
          id: `order_${Date.now()}`, // Simulated order ID
          amount: 499900, // â‚¹4999 in paise
          currency: 'INR'
        };

        const options = {
          key: 'rzp_live_i5o6AxHTDMTQoT',
          amount: order.amount,
          currency: order.currency,
          order_id: order.id,
          name: 'Haunted WebDev Academy',
          description: 'HTML Course Purchase',
          image: 'https://via.placeholder.com/40?text=ðŸ‘»',
          handler: async (response) => {
            progressBar.style.width = '100%';
            await sendTelegramNotification('success', response.razorpay_payment_id);
            openModal('Payment Successful! Access granted.');
          },
          prefill: {
            name: formData.fullName,
            email: formData.email,
            contact: formData.mobile
          },
          theme: { color: '#dc2626' },
          modal: {
            ondismiss: async () => {
              await sendTelegramNotification('cancelled', null);
              closeModal();
              alert('Payment cancelled.');
            }
          }
        };

        const razorpay = new Razorpay(options);
        razorpay.on('payment.failed', async () => {
          progressBar.style.width = '100%';
          await sendTelegramNotification('failed', null);
          openModal('Payment Failed. Please try again.');
        });
        razorpay.open();
      } catch (error) {
        console.error('Payment error:', error);
        await sendTelegramNotification('failed', null);
        openModal('Error processing payment. Please try again.');
      }
    });

    // Keyboard navigation
    paymentModal.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') closeModal();
    });
  </script>
</body>
</html>